{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\23 - Bigger Project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport { Head } from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nvar DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 1235 Some City\",\n  descrition: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 10, 1235 Some City\",\n  descrition: \"This is a second meetup!\"\n}];\n\nfunction HomePage(props) {\n  //const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //     //send http request and fetch data\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req; //request object - for authentication it can be usefull\n//   const res = context.res; //response\n//   //fetch data from file, always runs on server never on client\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/React/23 - Bigger Project/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MeetupList","DUMMY_MEETUPS","id","title","image","address","descrition","HomePage","props","meetups"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,WAArB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,IAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,gFAJJ;AAKEC,EAAAA,OAAO,EAAE,gCALX;AAMEC,EAAAA,UAAU,EAAE;AANd,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,gFAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,UAAU,EAAE;AANd,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AAEA;AACA;AACA;AACA;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApBSF,Q;;AAkDT,eAAeA,QAAf","sourcesContent":["import { Head } from \"next/head\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 5, 1235 Some City\",\r\n    descrition: \"This is a first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 10, 1235 Some City\",\r\n    descrition: \"This is a second meetup!\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  //const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //     //send http request and fetch data\r\n  //     setLoadedMeetups(DUMMY_MEETUPS);\r\n  // }, []);\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req; //request object - for authentication it can be usefull\r\n//   const res = context.res; //response\r\n\r\n//   //fetch data from file, always runs on server never on client\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  //fetch data from API, database\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://user-aida:aidaturska995.@cluster0.djm6g.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray(); //finds all documents in collection\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })), //DUMMY_MEETUPS ,\r\n    }, //it will fetch data as props, thats why we not longer need useState or useEffect\r\n    revalidate: 1, // wants a number, 10 is number of seconds, not be generated just during the build proccess, but it will also be generated every couple of seconds\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}