{"ast":null,"code":"//we dont create react components\n// /api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  //req - request contains data about incoming request\n  //res - respons will be needed for sending back response\n  if (req.method === \"POST\") {\n    try {\n      //which kind of request was send\n      const data = req.body; //body of incoming request\n      //const { title, image, address, description } = data; //object distracturing\n      //store in database\n\n      const client = await MongoClient.connect(\"mongodb+srv://user-aida:aidaturska995.@cluster0.djm6g.mongodb.net/meetups?retryWrites=true&w=majority\");\n      const db = client.db();\n      const meetupsCollection = await db.collection(\"meetups\");\n      const result = await meetupsCollection.insertOne(data); //inserting one new document in this collection\n      //if we dont have database or collection it will be created here\n      //collection is a javascript object\n\n      console.log(result); //get generated id\n\n      client.close(); //to close database connection\n      //we need to use response object to send back response\n\n      res.status(201).json({\n        message: \"Meetup inserted\"\n      }); //we will have status 201 that we wrote here if it was successfull\n    } catch (err) {\n      console.log(err);\n    }\n  }\n} //connect retruns promise\n\n\nexport default handler;","map":{"version":3,"sources":["D:/React/23 - Bigger Project/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message","err"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B;AACA;AAEA,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF;AACA,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CAFE,CAEqB;AACvB;AAEA;;AAEA,YAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,uGADmB,CAArB;AAGA,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,YAAMC,iBAAiB,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhC;AACA,YAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB,CAbE,CAasD;AACxD;AACA;;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAjBE,CAiBmB;;AAErBL,MAAAA,MAAM,CAACS,KAAP,GAnBE,CAmBc;AAChB;;AAEAb,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,EAtBE,CAuBF;AACD,KAxBD,CAwBE,OAAOC,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD;AACF;AACF,C,CAED;;;AAEA,eAAenB,OAAf","sourcesContent":["//we dont create react components\r\n// /api/new-meetup\r\n\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nasync function handler(req, res) {\r\n  //req - request contains data about incoming request\r\n  //res - respons will be needed for sending back response\r\n\r\n  if (req.method === \"POST\") {\r\n    try {\r\n      //which kind of request was send\r\n      const data = req.body; //body of incoming request\r\n      //const { title, image, address, description } = data; //object distracturing\r\n\r\n      //store in database\r\n\r\n      const client = await MongoClient.connect(\r\n        \"mongodb+srv://user-aida:aidaturska995.@cluster0.djm6g.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n      );\r\n      const db = client.db();\r\n\r\n      const meetupsCollection = await db.collection(\"meetups\");\r\n      const result = await meetupsCollection.insertOne(data); //inserting one new document in this collection\r\n      //if we dont have database or collection it will be created here\r\n      //collection is a javascript object\r\n\r\n      console.log(result); //get generated id\r\n\r\n      client.close(); //to close database connection\r\n      //we need to use response object to send back response\r\n\r\n      res.status(201).json({ message: \"Meetup inserted\" });\r\n      //we will have status 201 that we wrote here if it was successfull\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n}\r\n\r\n//connect retruns promise\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}