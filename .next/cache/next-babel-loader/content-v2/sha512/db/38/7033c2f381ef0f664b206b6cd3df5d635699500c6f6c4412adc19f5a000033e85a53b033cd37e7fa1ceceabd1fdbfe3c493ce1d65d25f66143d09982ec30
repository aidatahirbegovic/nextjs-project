{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 1235 Some City\",\n  descrition: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 10, 1235 Some City\",\n  descrition: \"This is a second meetup!\"\n}];\n\nfunction HomePage(props) {\n  //const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //     //send http request and fetch data\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse huge list of highly ative React meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n} // export async function getServerSideProps(context) {\n//   const req = context.req; //request object - for authentication it can be usefull\n//   const res = context.res; //response\n//   //fetch data from file, always runs on server never on client\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  //fetch data from API, database\n  const client = await MongoClient.connect(\"mongodb+srv://user-aida:aidaturska995.@cluster0.djm6g.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray(); //finds all documents in collection\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      })) //DUMMY_MEETUPS ,\n\n    },\n    //it will fetch data as props, thats why we not longer need useState or useEffect\n    revalidate: 1 // wants a number, 10 is number of seconds, not be generated just during the build proccess, but it will also be generated every couple of seconds\n\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}