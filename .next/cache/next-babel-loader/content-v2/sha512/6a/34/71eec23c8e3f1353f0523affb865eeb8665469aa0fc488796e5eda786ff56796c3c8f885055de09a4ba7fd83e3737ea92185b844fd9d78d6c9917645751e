{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\23 - Bigger Project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"; //our-doman.com/new-meetup\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some address 5, 1235 Some City\",\n    description: \"This is a first meetup!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  //returns object where we describe all dynamic values\n  return {\n    fallback: false,\n    //this key tells js weather all keys in ppaths have suported value or just some of them\n    //false - all paths suport meetupIds values - if someone enters m3, they will see 404 errir\n    //true - they will try to generate a page for this id dynamicly\n    paths: [//array of versions, multiple objects, one obejct per version of dynamic page\n    {\n      params: {\n        //object with all the key values that might lead to dynamic page\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  //all versions for all ids are pregenerated\n  //fetch data fro single meetup\n  //context will not hold request and response but it will have params key\n  const meetupId = context.params.meetupId; //object where identifiers will be [] we have meetupId\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n        id: meetupId,\n        title: \"A First Meetup\",\n        address: \"Some address 5, 1235 Some City\",\n        description: \"This is a first meetup!\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/React/23 - Bigger Project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB,C,CAEA;;AACA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,gFADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,gCAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACW;AAChB;AACA;AACAC,IAAAA,KAAK,EAAE,CACL;AACA;AACEC,MAAAA,MAAM,EAAE;AACN;AACAC,QAAAA,QAAQ,EAAE;AAFJ;AADV,KAFK,EAQL;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KARK;AAJF,GAAP;AAmBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA;AACA;AACA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC,CAJ4C,CAIF;;AAC1CG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,SAAO;AACLK,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,gFAFQ;AAGVC,QAAAA,EAAE,EAAER,QAHM;AAIVS,QAAAA,KAAK,EAAE,gBAJG;AAKVC,QAAAA,OAAO,EAAE,gCALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAehB,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\n//our-doman.com/new-meetup\r\nfunction MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"A First Meetup\"\r\n      address=\"Some address 5, 1235 Some City\"\r\n      description=\"This is a first meetup!\"\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  //returns object where we describe all dynamic values\r\n  return {\r\n    fallback: false,//this key tells js weather all keys in ppaths have suported value or just some of them\r\n    //false - all paths suport meetupIds values - if someone enters m3, they will see 404 errir\r\n    //true - they will try to generate a page for this id dynamicly\r\n    paths: [\r\n      //array of versions, multiple objects, one obejct per version of dynamic page\r\n      {\r\n        params: {\r\n          //object with all the key values that might lead to dynamic page\r\n          meetupId: \"m1\",\r\n        },\r\n      },\r\n      {\r\n        params: {\r\n          meetupId: \"m2\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //all versions for all ids are pregenerated\r\n  //fetch data fro single meetup\r\n  //context will not hold request and response but it will have params key\r\n  const meetupId = context.params.meetupId; //object where identifiers will be [] we have meetupId\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n        id: meetupId,\r\n        title: \"A First Meetup\",\r\n        address: \"Some address 5, 1235 Some City\",\r\n        description: \"This is a first meetup!\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}